/**
 * DO NOT EDIT THIS FILE 
 * author: Ronny Hartanto (2022)
 */

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.assertFalse;

import org.junit.jupiter.api.Test;

import java.io.*;
import java.util.GregorianCalendar;
import java.util.Date;

public class TestExercise03a {

   @Test
   public void test01()
   {
     PrintStream originalOut = System.out;
     ByteArrayOutputStream bos = new ByteArrayOutputStream();
     System.setOut(new PrintStream(bos));
     GregorianCalendar date = new GregorianCalendar(1990, 01, 01);
     Student student1 = new Student("Stud1", "Fam1");
     student1.setDegree(Course.ME);
     assertEquals(student1.getDegree(), Course.ME);
     assertEquals(student1.getID(), 10000);
     Student student2 = new Student("Stud2", "Fam2");
     assertEquals(student2.getID(), 10001);
     student2.setDegree("EL");
     assertEquals(student2.getDegree(), Course.EL);
     System.setOut(originalOut);
   }
   @Test
   public void test02()
   {
     PrintStream originalOut = System.out;
     ByteArrayOutputStream bos = new ByteArrayOutputStream();
     System.setOut(new PrintStream(bos));
     GregorianCalendar date = new GregorianCalendar(1990, 01, 01);
     Student student1 = new Student("Stud1", "Fam1");
     student1.setDegree(Course.ME);
     assertEquals(student1.getDegree(), Course.ME);
     Student student2 = new Student("Stud2", "Fam2");
     Date datetwo = date.getTime();
     assertEquals(student2.getID(), 10001);
     student2.setDegree("EL");
     assertEquals(student2.getDegree(), Course.EL);
     Student student3 = new Student("Stud3", "Fam3", datetwo);
     Student student4 = new Student("Stud4", "Fam4", datetwo);
     assertEquals(student4.getID(), 10003);
     assertEquals(student3.getBirthday(), datetwo);
     student4.setDegree("MME");
     assertEquals("Mechanical Engineering, M.Sc.", student4.getDegreeDescription());
     System.setOut(originalOut);
   }
   @Test
   public void test03()
   {
     PrintStream originalOut = System.out;
     ByteArrayOutputStream bos = new ByteArrayOutputStream();
     System.setOut(new PrintStream(bos));
     GregorianCalendar date = new GregorianCalendar(1990, 01, 01);
     Student student1 = new Student("Stud1", "Fam1");
     student1.setDegree(Course.ME);
     assertEquals(student1.getDegree(), Course.ME);
     Student student2 = new Student("Stud2", "Fam2");
     Date datethree = date.getTime();
     assertEquals(student2.getID(), 10001);
     student2.setDegree("EL");
     assertEquals(student2.getDegree(), Course.EL);
     Student student3 = new Student("Stud3", "Fam3", datethree);
     student3.setDegree(Course.IE);
     Student student4 = new Student("Stud4", "Fam4", datethree);
     assertEquals(student4.getID(), 10003);
     assertEquals(student3.getBirthday(), datethree);
     student4.setDegree("MME");
     assertEquals("Mechanical Engineering, M.Sc.", student4.getDegreeDescription());
     Student student5 = new Student("Stud5", "Fam5");
     student5.setDegree(Course.MSE);
     assertEquals(student5.getDegree(), Course.MSE);
     Student student6 = new Student("Stud6", "Fam6");
     assertEquals(student6.getID(), 10005);
     student2.setDegree("BMS");
     assertEquals(student2.getDegree(), Course.BMS);
     Student student7 = new Student("Stud7", "Fam7", datethree);
     student7.setDegree(Course.SCB);
     Student student8 = new Student("Stud8", "Fam8", datethree);
     assertEquals(student8.getID(), 10007);
     assertEquals(student3.getBirthday(), datethree);
     student8.setDegree("MBB");
     assertEquals("Mechanical Engineering, B.Sc.", student1.getDegreeDescription());     
     System.setOut(originalOut);
   } 
   @Test
   public void test04()
   {
     PrintStream originalOut = System.out;
     ByteArrayOutputStream bos = new ByteArrayOutputStream();
     System.setOut(new PrintStream(bos));
     GregorianCalendar date = new GregorianCalendar(1990, 01, 01);
     Student student1 = new Student("Stud1", "Fam1");
     student1.setDegree(Course.ME);
     assertEquals("Stud1", student1.getName());
     student1.setName("Student1");
     assertEquals("Student1",student1.getName());
     assertEquals(student1.getDegree(), Course.ME);
     Student student2 = new Student("Stud2", "Fam2");
     assertEquals("Fam2", student2.getFamilyName());
     student2.setFamilyName("Family2");
     assertEquals("Family2",student2.getFamilyName());
     assertEquals(student2.getID(), 10001);
     student2.setDegree("EL");
     assertEquals(student2.getDegree(), Course.EL);
     Student student3 = new Student("Stud3", "Fam3", date.getTime());
     student3.setDegree(Course.IE);
     Student student4 = new Student("Stud4", "Fam4", date.getTime());
     assertEquals(student4.getID(), 10003);
     assertEquals(student3.getBirthday(), date.getTime());
     student4.setDegree("MME");
     assertEquals("Mechanical Engineering, M.Sc.", student4.getDegreeDescription());
     Student student5 = new Student("Stud5", "Fam5");
     student5.setDegree(Course.MSE);
     assertEquals(student5.getDegree(), Course.MSE);
     Student student6 = new Student("Stud6", "Fam6");
     assertEquals(student6.getID(), 10005);
     student6.setDegree("BMS");
     assertEquals(student6.getDegree(), Course.BMS);
     Student student7 = new Student("Stud7", "Fam7", date.getTime());
     student7.setDegree(Course.SCB);
     assertEquals(student7.getDegree(), Course.SCB);
     Student student8 = new Student("Stud8", "Fam8", date.getTime());
     assertEquals(student8.getID(), 10007);
     assertEquals(student8.getBirthday(), date.getTime());
     student8.setDegree("MBB");
     assertEquals(student8.getDegree(), Course.MBB);
     assertEquals("Mechanical Engineering, B.Sc.", student1.getDegreeDescription());     
     System.setOut(originalOut);
   }    
   @Test
   public void test05()
   {
     PrintStream originalOut = System.out;
     ByteArrayOutputStream bos = new ByteArrayOutputStream();
     System.setOut(new PrintStream(bos));
     GregorianCalendar date = new GregorianCalendar(1990, 01, 01);
     Student student1 = new Student("Stud1", "Fam1");
     student1.setDegree(Course.ME);
     assertEquals("Stud1", student1.getName());
     assertEquals("Stud1.Fam1@hsrw.org", student1.getEmail());
     student1.setName("Student1");
     assertEquals("Student1",student1.getName());
     assertEquals(student1.getDegree(), Course.ME);
     Student student2 = new Student("Stud2", "Fam2");
     assertEquals("Fam2", student2.getFamilyName());
     student2.setFamilyName("Family2");
     assertEquals("Family2",student2.getFamilyName());
     assertEquals("Stud2.Family2@hsrw.org", student2.getEmail());
     assertEquals(student2.getID(), 10001);
     student2.setDegree("EL");
     assertEquals(student2.getDegree(), Course.EL);
     Student student3 = new Student("Stud3", "Fam3", date.getTime());
     student3.setDegree(Course.IE);
     Student student4 = new Student("Stud4", "Fam4", date.getTime());
     assertEquals(student4.getID(), 10003);
     assertEquals(student3.getBirthday(), date.getTime());
     student4.setDegree("MME");
     assertEquals("Mechanical Engineering, M.Sc.", student4.getDegreeDescription());
     Student student5 = new Student("Stud5", "Fam5");
     student5.setDegree(Course.MSE);
     assertEquals(student5.getDegree(), Course.MSE);
     Student student6 = new Student("Stud6", "Fam6");
     assertEquals(student6.getID(), 10005);
     student6.setDegree("BMS");
     assertEquals(student6.getDegree(), Course.BMS);
     Student student7 = new Student("Stud7", "Fam7", date.getTime());
     student7.setDegree(Course.SCB);
     Student student8 = new Student("Stud8", "Fam8", date.getTime());
     assertEquals(student8.getID(), 10007);
     assertEquals(student8.getBirthday(), date.getTime());
     student8.setDegree("MBB");
     assertEquals("Mechanical Engineering, B.Sc.", student1.getDegreeDescription());     
     System.setOut(originalOut);
   }       
}
